TODO
----
- db locking? how to prevent bacula from writing to the database?
  can this be done at all?
- use bacula-dir.conf to extract database connection info ?
- use python's logging facility for debug messages
- optimize bsr
- allow full filesystem caching (useful for initial rsync)

+ for each query check that we get a result and that it has the
  expected number of rows
+ we need a way to notify users that a volume is needed, and respond
  to user actions: look at
   /usr/share/doc/python-notify/examples/test-multi-actions.py
+ generate bsr on read access, call bextract
+ parse file stat info
+ allow any date    

+ [CANCELLED] allow specifying volume id? (like in ua_restore code)
   (why?)
+ [CANCELLED] handle acl in job selection
  (does not apply)
+ [CANCELLED] for each database driver prepare an sql query with
  correct paramstyle
  (we use formatted strings, and make sure that no parameter is
  directly taken from user input, rather we only use results from db
  queries) 
+ [CANCELLED] invetigate discrepency between files inserted in tree and files
  marked for backup in bconsole
  (seems to be that missing files are directories which are not counted)
   
